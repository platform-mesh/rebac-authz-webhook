version: "3"

vars:
  LOCAL_BIN: bin
  CONTROLLER_TOOLS_VERSION: v0.16.4
  ENVTEST_K8S_VERSION: "1.31.0"
  ENVTEST_VERSION: release-0.19
  CRD_DIRECTORY: config/crd/bases
  KCP_APIGEN_VERSION: v0.21.0
  KCP_VERSION: 0.26.1
  GOLANGCI_LINT_VERSION: v1.64.8
  GOARCH:
    sh: go env GOARCH
  GOOS:
    sh: go env GOOS
tasks:
  default:
    cmds:
      - task --list-all
  ## Setup

  setup:golangci-lint:
    internal: true
    cmds:
      - test -s {{.LOCAL_BIN}}/golangci-lint || GOBIN=$(pwd)/{{.LOCAL_BIN}} go install github.com/golangci/golangci-lint/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
  setup:go-test-coverage:
    internal: true
    cmds:
      - test -s {{.LOCAL_BIN}}/go-test-coverage || ( GOBIN=$(pwd)/{{.LOCAL_BIN}} go install github.com/vladopajic/go-test-coverage/v2@latest )
  ## Development
  build:
    cmds:
      - go build ./...
  docker-build:
    cmds:
      - docker build .
  ## Testing
  fmt:
    cmds:
      - go fmt ./...
  lint:
    deps: [setup:golangci-lint]
    cmds:
      - echo "https://openmfp:$PLATFORM_MESH_TOKEN@github.com" >> $HOME/.git-credentials
      - git config --global url."https://${PLATFORM_MESH_TOKEN}@github.com/".insteadOf "https://github.com/"
      - task: fmt
      - "{{.LOCAL_BIN}}/golangci-lint run --timeout 15m ./..."
    env:
      GOPRIVATE: github.com/platform-mesh
      GO111MODULE: on
      PLATFORM_MESH_TOKEN: ${PLATFORM_MESH_TOKEN}
  test:
    env:
      GOPRIVATE: github.com/platform-mesh
      GO111MODULE: on
      PLATFORM_MESH_TOKEN: ${PLATFORM_MESH_TOKEN}
    cmds:
      - echo "https://openmfp:$PLATFORM_MESH_TOKEN@github.com" >> $HOME/.git-credentials
      - git config --global url."https://${PLATFORM_MESH_TOKEN}@github.com/".insteadOf "https://github.com/"
      - go test -count=1 ./... {{.ADDITIONAL_COMMAND_ARGS}}
  cover:
    cmds:
      - task: test
        vars:
          ADDITIONAL_COMMAND_ARGS: -coverprofile=./cover.out -covermode=atomic
  validate:
    cmds:
      - task: lint
      - task: test
  assert-coverage:
    deps: [setup:go-test-coverage]
    cmds:
      - task: cover
      - "{{.LOCAL_BIN}}/go-test-coverage --profile cover.out --config ./.testcoverage.yml"
